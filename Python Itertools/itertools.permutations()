# itertools.permutations(iterable[, r])
# This tool returns successive r length permutations of elements in an iterable.
# If r is not specified or is None, then r defaults to the length of the iterable, and all possible full length permutations are generated.
# Permutations are printed in a lexicographic sorted order. So, if the input iterable is sorted, the permutation tuples will be produced in a sorted order.

# TASK :
# You are given a string S.
# Your task is to print all possible permutations of size K of the string in lexicographic sorted order.

# Input Format
# A single line containing the space separated string S and the integer value K.

# Output Format
# Print the permutations of the string S on separate lines.


# SOLN 1:

from itertools import permutations

s,n = input().split(" ")
permutations = list(permutations(s, int(n)))
permutations.sort()

for i in permutations:
    print("".join(i))

# SOLN 2 :
from itertools import permutations

word,num = input().split(" ")
permutations = list(permutations(word,int(num)))
permutations.sort()
[print("".join(i) for i in permutations)]

# SOLN 3 :

from itertools import permutations
s,n = input().split()
print(*[''.join(i) for i in permutations(sorted(s),int(n))],sep='\n')

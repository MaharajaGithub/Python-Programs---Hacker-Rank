# itertools.combinations(iterable, r)
# This tool returns the r length subsequences of elements from the input iterable.
# Combinations are emitted in lexicographic sorted order. So, if the input iterable is sorted, the combination tuples will be produced in sorted order.

# TASK :
# You are given a string S.
# Your task is to print all possible combinations, up to size K, of the string in lexicographic sorted order.

# Input Format
# A single line containing the string S and integer value K separated by a space.

# Output Format
# Print the different combinations of string S on separate lines.

# SOLN 1 :

from itertools import combinations
s, n  = input().split()
for i in range(1, int(n)+1):
    for j in combinations(sorted(s), i):
        print (''.join(j))
                
# SOLN 2 :

from itertools import combinations
a,n=input().split()
t=list(a)
t.sort()
k=0
for i in range(int(n)):
    li=list(combinations(t,i+1))
    for j in li:
        ans=''.join(j)
        print(ans)
        
# SOLN 3 :

from itertools import combinations
a,b = input().split()
print(*[''.join(j) for i in range(1,int(b)+1) for j in combinations(sorted(a),i)],sep='\n')

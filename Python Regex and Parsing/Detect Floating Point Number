# TASK :
# You are given a string N.
# Your task is to verify that N is a floating point number.

# In this task, a valid float number must satisfy all of the following requirements:
# Number can start with +, - or . symbol.

# For example:
✔ +4.50
✔ -1.0
✔ .5
✔ -.7
✔ +.4
✖ -+4.5

# Number must contain at least 1 decimal value.
# For example:
✖ 12.
✔ 12.0  

# Number must have exactly one . symbol.
# Number must not give any exceptions when converted using Float(N).

# Input Format
# The first line contains an integer T, the number of test cases.
# The next T line(s) contains a string N.

# Output Format
# Output True or False for each test case.


# SOLN 1:

import re
for _ in range (int(input())):
    print (bool(re.match(r'^[-+]?[0-9]*\.[0-9]+$', input())))


# SOLN 2 :

for i in range(int(input())):    
    try:
        n=input()
        int(n.split('.')[1])    #for Decimal value ('12.')
        if float(n):
            print('True')
    except:        
        print('False')


# SOLN 3 :

count=int(input().strip())
for _ in range(count):
    ans=False
    try:
        string=input().strip()
        number=float(string)
        ans=True
        number=int(string)
        ans=False
    except:
        pass
    print(ans)

# Lambda :
# Let's learn some new Python concepts! You have to generate a list of the first N fibonacci numbers,0 being the first number. 
# Then, apply the map function and a lambda expression to cube each fibonacci number and print the list.

# Concept
# The map() function applies a function to every member of an iterable and returns the result. It takes two parameters: 
# first, the function that is to be applied and secondly, the iterables.
# Let's say you are given a list of names, and you have to print a list that contains the length of each name.

# Input Format
# One line of input: an integer N.

# Output Format
# A list on a single line containing the cubes of the first N fibonacci numbers.

# SOLN 1 :

cube = lambda x: x**3

def fibonacci(n):
    # return a list of fibonacci numbers
    lis = [0,1]
    for i in range(2,n):
        lis.append(lis[i-2]+lis[i-1])
    return (lis[0:n])
    
    
# SOLN 2 :

inp = int(input())
cube = lambda x: x**3 # complete the lambda function
def fibonacci(n):
    a,b = 0,1
    for i in range(n):
        yield a
        a,b = b,a+b

print(list(map(cube, list(fibonacci(inp)))))

